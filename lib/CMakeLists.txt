# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-ni_modinst_rf
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

list(APPEND ni_modinst_rf_sources
    ni_rfsa_source_impl.cc
)

set(ni_modinst_rf_sources "${ni_modinst_rf_sources}" PARENT_SCOPE)
if(NOT ni_modinst_rf_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT ni_modinst_rf_sources)


#########################################################################
#
#########################################################################


if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    if(NOT DEFINED ENV{IVIROOTDIR32})
        MESSAGE(SEND_ERROR "IVI Root environment variable not found")
        return()
    else()
        set(IVI_ROOT_DIR $ENV{IVIROOTDIR64})
        cmake_path(APPEND IVI_ROOT_DIR "Lib_x64/msc" OUTPUT_VARIABLE IVI_LIB_DIR)
    endif()

    if(NOT DEFINED ENV{VXIPNPPATH64})
        MESSAGE(SEND_ERROR "VISA Root environment variable not found")
        return()
    else()
        set(VISA_ROOT_DIR $ENV{VXIPNPPATH64})
        cmake_path(APPEND VISA_ROOT_DIR "Win64/Lib_x64/msc" OUTPUT_VARIABLE VISA_LIB_DIR)
        cmake_path(APPEND VISA_ROOT_DIR "Win64/Include" OUTPUT_VARIABLE VISA_INCLUDE_DIR)
    endif()

elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
    if(NOT DEFINED ENV{IVIROOTDIR64})
        MESSAGE(SEND_ERROR "IVI Root environment variable not found")
        return()
    else()
        set(IVI_ROOT_DIR $ENV{IVIROOTDIR32})
        cmake_path(APPEND IVI_ROOT_DIR "Lib/msc" OUTPUT_VARIABLE IVI_LIB_DIR)
    endif()

    if(NOT DEFINED ENV{VXIPNPPATH})
        MESSAGE(SEND_ERROR "VISA Root environment variable not found")
        return()
    else()
        set(VISA_ROOT_DIR $ENV{VXIPNPPATH})
        cmake_path(APPEND VISA_ROOT_DIR "WinNT/lib/msc" OUTPUT_VARIABLE VISA_LIB_DIR)
        cmake_path(APPEND VISA_ROOT_DIR "WinNT/Include" OUTPUT_VARIABLE VISA_INCLUDE_DIR)
    endif()

endif()



cmake_path(APPEND IVI_ROOT_DIR "Include" OUTPUT_VARIABLE IVI_INCLUDE_DIR)
cmake_path(APPEND VISA_LIB_DIR "niRFSA.lib" OUTPUT_VARIABLE NIRFSA_LIB_PATH)

find_library (LEGACY_CRT_LIB_PATH "legacy_stdio_definitions" NO_CACHE)
message(STATUS ${LEGACY_CRT_LIB_PATH})

add_library(gnuradio-ni_modinst_rf SHARED ${ni_modinst_rf_sources})
target_link_libraries(gnuradio-ni_modinst_rf gnuradio::gnuradio-runtime ${NIRFSA_LIB_PATH} ${LEGACY_CRT_LIB_PATH})
target_include_directories(gnuradio-ni_modinst_rf
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
    PUBLIC ${IVI_INCLUDE_DIR}
    PUBLIC ${VISA_INCLUDE_DIR}
  )
set_target_properties(gnuradio-ni_modinst_rf PROPERTIES DEFINE_SYMBOL "gnuradio_ni_modinst_rf_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-ni_modinst_rf PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-ni_modinst_rf)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_ni_modinst_rf_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-ni_modinst_rf)

if(NOT test_ni_modinst_rf_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_ni_modinst_rf_sources)

foreach(qa_file ${test_ni_modinst_rf_sources})
    GR_ADD_CPP_TEST("ni_modinst_rf_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
